<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-09-12T00:47:39 AST" name="Suite" finished-at="2023-09-12T00:48:08 AST" duration-ms="28640">
    <groups>
    </groups>
    <test started-at="2023-09-12T00:47:39 AST" name="chromeTest" finished-at="2023-09-12T00:47:41 AST" duration-ms="2184">
      <class name="qa.test.TestCase1">
        <test-method is-config="true" signature="BeforeTestMethod()[pri:0, instance:qa.test.TestCase1@6574a52c]" started-at="2023-09-12T00:47:39 AST" name="BeforeTestMethod" finished-at="2023-09-12T00:47:39 AST" duration-ms="199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestMethod -->
        <test-method is-config="true" signature="beforemethodmethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:qa.test.TestCase1@6574a52c]" started-at="2023-09-12T00:47:39 AST" name="beforemethodmethod" finished-at="2023-09-12T00:47:41 AST" duration-ms="1700" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void qa.test.TestCase1.validcredentials()]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.180 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: 'HAFISA', ip: '192.168.0.117'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.180 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: 'HAFISA', ip: '192.168.0.117'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:52)
at base.BaseTest.driversetup(BaseTest.java:84)
at base.BaseTest.beforemethodmethod(BaseTest.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:803)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:589)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethodmethod -->
        <test-method signature="validcredentials()[pri:0, instance:qa.test.TestCase1@6574a52c]" started-at="2023-09-12T00:47:41 AST" name="validcredentials" finished-at="2023-09-12T00:47:41 AST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.180 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: 'HAFISA', ip: '192.168.0.117'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 116.0.5845.180 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe 
Host info: host: 'HAFISA', ip: '192.168.0.117'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*], extensions: []}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:88)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:84)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:52)
at base.BaseTest.driversetup(BaseTest.java:84)
at base.BaseTest.beforemethodmethod(BaseTest.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:65)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:381)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:319)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:803)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:589)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcredentials -->
        <test-method is-config="true" signature="aftermethodmethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestCase1@6574a52c]" started-at="2023-09-12T00:47:41 AST" name="aftermethodmethod" finished-at="2023-09-12T00:47:41 AST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethodmethod -->
        <test-method is-config="true" signature="aftertestmethod()[pri:0, instance:qa.test.TestCase1@6574a52c]" started-at="2023-09-12T00:47:41 AST" name="aftertestmethod" finished-at="2023-09-12T00:47:41 AST" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertestmethod -->
      </class> <!-- qa.test.TestCase1 -->
    </test> <!-- chromeTest -->
    <test started-at="2023-09-12T00:47:41 AST" name="edgeTest" finished-at="2023-09-12T00:47:52 AST" duration-ms="11028">
      <class name="qa.test.TestCase1">
        <test-method is-config="true" signature="BeforeTestMethod()[pri:0, instance:qa.test.TestCase1@75d3a5e0]" started-at="2023-09-12T00:47:41 AST" name="BeforeTestMethod" finished-at="2023-09-12T00:47:41 AST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestMethod -->
        <test-method is-config="true" signature="beforemethodmethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:qa.test.TestCase1@75d3a5e0]" started-at="2023-09-12T00:47:41 AST" name="beforemethodmethod" finished-at="2023-09-12T00:47:46 AST" duration-ms="4802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void qa.test.TestCase1.validcredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethodmethod -->
        <test-method signature="validcredentials()[pri:0, instance:qa.test.TestCase1@75d3a5e0]" started-at="2023-09-12T00:47:46 AST" name="validcredentials" finished-at="2023-09-12T00:47:52 AST" duration-ms="5771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcredentials -->
        <test-method is-config="true" signature="aftermethodmethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestCase1@75d3a5e0]" started-at="2023-09-12T00:47:52 AST" name="aftermethodmethod" finished-at="2023-09-12T00:47:52 AST" duration-ms="319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validcredentials status=SUCCESS method=TestCase1.validcredentials()[pri:0, instance:qa.test.TestCase1@75d3a5e0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethodmethod -->
        <test-method is-config="true" signature="aftertestmethod()[pri:0, instance:qa.test.TestCase1@75d3a5e0]" started-at="2023-09-12T00:47:52 AST" name="aftertestmethod" finished-at="2023-09-12T00:47:52 AST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertestmethod -->
      </class> <!-- qa.test.TestCase1 -->
    </test> <!-- edgeTest -->
    <test started-at="2023-09-12T00:47:52 AST" name="firefoxTest" finished-at="2023-09-12T00:48:08 AST" duration-ms="15361">
      <class name="qa.test.TestCase1">
        <test-method is-config="true" signature="BeforeTestMethod()[pri:0, instance:qa.test.TestCase1@663c9e7a]" started-at="2023-09-12T00:47:52 AST" name="BeforeTestMethod" finished-at="2023-09-12T00:47:52 AST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTestMethod -->
        <test-method is-config="true" signature="beforemethodmethod(java.lang.String,java.lang.reflect.Method)[pri:0, instance:qa.test.TestCase1@663c9e7a]" started-at="2023-09-12T00:47:52 AST" name="beforemethodmethod" finished-at="2023-09-12T00:47:59 AST" duration-ms="7058" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void qa.test.TestCase1.validcredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethodmethod -->
        <test-method signature="validcredentials()[pri:0, instance:qa.test.TestCase1@663c9e7a]" started-at="2023-09-12T00:47:59 AST" name="validcredentials" finished-at="2023-09-12T00:48:06 AST" duration-ms="6878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validcredentials -->
        <test-method is-config="true" signature="aftermethodmethod(org.testng.ITestResult)[pri:0, instance:qa.test.TestCase1@663c9e7a]" started-at="2023-09-12T00:48:06 AST" name="aftermethodmethod" finished-at="2023-09-12T00:48:08 AST" duration-ms="1318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validcredentials status=SUCCESS method=TestCase1.validcredentials()[pri:0, instance:qa.test.TestCase1@663c9e7a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethodmethod -->
        <test-method is-config="true" signature="aftertestmethod()[pri:0, instance:qa.test.TestCase1@663c9e7a]" started-at="2023-09-12T00:48:08 AST" name="aftertestmethod" finished-at="2023-09-12T00:48:08 AST" duration-ms="94" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertestmethod -->
      </class> <!-- qa.test.TestCase1 -->
    </test> <!-- firefoxTest -->
  </suite> <!-- Suite -->
</testng-results>
